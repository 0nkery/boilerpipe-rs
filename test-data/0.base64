Day 18: Boilerpipe–Article Extraction for Java Developers
November 15, 2013
By Shekhar Gulati 
       Today for my 30 day challenge , I wanted to learn how to do text and image extraction from web links using the Java programming language. This is a common requirement in most of the content discovery websites like Prismatic . In this blog, I will show you how to use a Java library called boilerpipe to accomplish this task.
Prerequisite
Basic Java knowledge is required. Install the latest Java Development Kit (JDK) on your operating system. You can either install OpenJDK 7 or Oracle JDK 7 . OpenShift supports both OpenJDK 6 and 7.
Sign up for an OpenShift Account .Today for my 30 day challenge , I decided to learn how to do text and image extraction from web links using the Java programming language. This is a very common requirement in most of the content discovery websites like Prismatic . In this blog, we will learn how we can use a Java library called boilerpipe to accomplish this task.
Prerequisite
Basic Java knowledge is required. Install the latest Java Development Kit (JDK) on your operating system. You can either install OpenJDK 7 or Oracle JDK 7 . OpenShift supports both OpenJDK 6 and 7.
Sign up for an OpenShift Account . It is completely free and Red Hat gives every user three free Gears on which to run your applications. At the time of this writing, the combined resources allocated for each user is 1.5 GB of memory and 3 GB of disk space.
Install the rhc client tool on your machine. RHC is a ruby gem so you need to have ruby 1.8.7 or above on your machine. To install rhc, just type sudo gem install rhc If you already have one, make sure it is the latest one. To update your rhc, execute the command  sudo gem update rhc For additional assistance setting up the rhc command-line tool, see the following page: https://www.openshift.com/developers/rhc-client-tools-install 
Setup your OpenShift account using the rhc setup command. This command will help you create a namespace and upload your ssh keys to OpenShift server.
Step1 : Create a JBoss EAP application
Let’s start creating the demo application. The name of the application is newsapp .
$ rhc create-app newsapp jbosseap
If you have access to medium gears then you can use following command.
$ rhc create-app newsapp jbosseap -g medium
This will create an application container for us, called a gear, and setup all of the required SELinux policies and cgroup configuration. OpenShift will also setup a private git repository for us and clone the repository to the local system. Finally, OpenShift will propagate the DNS to the outside world. The application will be accessible at http://newsapp-{domain-name}.rhcloud.com/. Replace {domain-name} with your own unique OpenShift domain name (also sometimes called a namespace).
Step 2 : Add Maven dependencies
In the pom.xml file add the following dependency:
<dependency>
    <groupId>de.l3s.boilerpipe</groupId>
    <artifactId>boilerpipe</artifactId>
    <version>1.2.0</version>
</dependency>
<dependency>
    <groupId>xerces</groupId>
    <artifactId>xercesImpl</artifactId>
    <version>2.9.1</version>
</dependency>

<dependency>
    <groupId>net.sourceforge.nekohtml</groupId>
    <artifactId>nekohtml</artifactId>
    <version>1.9.13</version>
</dependency>
You will also need to add a new repository
<repository>
    <id>boilerpipe-m2-repo</id>
    <url>http://boilerpipe.googlecode.com/svn/repo/</url>
    <releases>
        <enabled>true</enabled>
    </releases>
    <snapshots>
        <enabled>false</enabled>
    </snapshots>
</repository>
Also update the maven project to Java 7 by updating a couple of properties in the pom.xml file:
<maven.compiler.source>1.7</maven.compiler.source>
<maven.compiler.target>1.7</maven.compiler.target>